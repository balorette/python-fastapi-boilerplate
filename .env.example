# Environment configuration
ENVIRONMENT=development
DEBUG=True

# Database
# Option 1: SQLite (for development - default, no setup required)
DATABASE_URL=sqlite:///./app.db
DATABASE_URL_ASYNC=sqlite+aiosqlite:///./app.db

# Option 2: PostgreSQL (for production or when you need PostgreSQL features)
# DATABASE_URL=postgresql://user:password@localhost:5432/iac_api_db
# DATABASE_URL_ASYNC=postgresql+asyncpg://user:password@localhost:5432/iac_api_db

# Redis
REDIS_URL=redis://localhost:6379/0

# Security
SECRET_KEY=your-secret-key-change-this-in-production
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30

# API Configuration
API_V1_STR=/api/v1
PROJECT_NAME=IAC API
PROJECT_VERSION=0.1.0

# CORS
BACKEND_CORS_ORIGINS=["http://localhost:3000","http://localhost:8000"]

# Logging & Observability
LOG_LEVEL=INFO
LOG_DIRECTORY=logs
AUDIT_LOG_ENABLED=True
SAFETY_CHECKS_ENABLED=True

# Prometheus Metrics (optional, set to True to enable /metrics endpoint)
PROMETHEUS_METRICS_ENABLED=False

# Middleware Configuration
REQUEST_LOGGING_ENABLED=True
PERFORMANCE_MONITORING_ENABLED=True
SECURITY_HEADERS_ENABLED=True
SECURITY_CSP_ENABLED=True
REQUEST_ID_HEADER_NAME=X-Correlation-ID
PROCESS_TIME_HEADER_NAME=X-Process-Time

# Rate Limiting
RATE_LIMIT_ENABLED=True
RATE_LIMIT_REQUESTS_PER_MINUTE=100
PERFORMANCE_SLOW_REQUEST_THRESHOLD_MS=1000.0

# CORS Configuration (adjust for your frontend origin)
# For development with wildcard (less secure):
# CORS_ALLOW_ORIGINS=["*"]
# For production (recommended):
CORS_ALLOW_ORIGINS=["http://localhost:3000","http://localhost:8000"]
CORS_ALLOW_METHODS=["GET","POST","PUT","DELETE","OPTIONS","PATCH"]
CORS_ALLOW_HEADERS=["Content-Type","Authorization","X-Correlation-ID"]
CORS_ALLOW_CREDENTIALS=True

# Trusted Hosts
# Replace with your public domains in production; keep `testserver` for local pytest runs.
TRUSTED_HOSTS=["localhost","127.0.0.1","testserver"]
# TRUSTED_HOSTS=["api.yourdomain.com","www.yourdomain.com"]
